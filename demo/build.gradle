plugins {
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'com.google.protobuf'  version '0.8.9' // grpc
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

task copyDomaResources(type: Sync)  {
	from sourceSets.main.resources.srcDirs
	into compileJava.destinationDir
	include 'doma.compile.config'
	include 'META-INF/**/*.sql'
	include 'META-INF/**/*.script'
}

compileJava {
	// Depend on the above task
	dependsOn copyDomaResources
	options.encoding = 'UTF-8'
}

compileTestJava {
	options.encoding = 'UTF-8'
	// Disable the annotation processors during the test run
	options.compilerArgs = ['-proc:none']
}

// processResources.destinationDir = compileJava.destinationDir
// compileJava.dependsOn processResources

// これ一回いれて見る
apply plugin: 'idea'

idea {
	module {
		inheritOutputDirs = false // trueじゃないとだめなパターンもあるらしい
		outputDir = file("build/classes/java/main/")
		// outputDir = compileJava.destinationDir
		// testOutputDir file('build/classes/test')
	}
}

// gRPCのprotoファイル配置ディレクトリ
sourceSets {
	main {
		java {
			srcDirs 'src/main/grpc'
		}
	}
}

// gRPCの設定
def grpcVersion = '1.10.0'

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.5.1-1'
	}

	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}

	generateProtoTasks {
		all().each { task ->
			task.plugins {
				grpc
			}
		}
	}

	generatedFilesBaseDir = "$projectDir/src/"
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.webjars:jquery:3.2.1')
	compile('org.webjars:jquery-ui:1.12.1')
	compile('org.webjars:bootstrap:4.0.0')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('io.github.lognet:grpc-spring-boot-starter:3.3.0') // grpc
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	compile('org.seasar.doma.boot:doma-spring-boot-starter:1.1.1')
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.seasar.doma:doma:2.25.0"
	implementation "org.seasar.doma:doma:2.25.0"
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}
